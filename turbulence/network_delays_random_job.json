{
  "version": "0.1.0",
  "title": "What is the impact of reduce the network's QoS on one random PCF/TAS VM?",
  "description": "If a random PCF/TAS VM's network traffic has become unreliable, then what happens to the quality of service?",
  "contributions": {
    "reliability": "high",
    "availability": "high",
    "performance": "medium",
    "security": "none"
  },
  "tags": [
    "tls",
    "cloudfoundry"
  ],
  "configuration": {
    "turb_verify_ssl": false,
    "turb_api_url": {
      "type": "env",
      "key": "TURBULENCE_URL",
      "default": "https://turbulence:PASSWORD@10.244.0.35:8080"
    },
    "site_to_test": {
      "type": "env",
      "key": "SITE_TO_TEST",
      "default": "https://www.google.com/"
    },
    "deployment_name": {
      "type": "env",
      "key": "DEPLOYMENT_NAME",
      "default": "cf-123ABC"
    },
    "job_name": {
      "type": "env",
      "key": "JOB_NAME",
      "default": "router"
    },
    "limit_nodes": {
      "type": "env",
      "key": "LIMIT",
      "env_var_type": "int",
      "default": 1
    },
    "network_timeout": {
      "type": "env",
      "key": "NET_TIMEOUT",
      "default": "5m"
    },
    "delay": {
      "type": "env",
      "key": "NET_DELAY",
      "default": "200ms"
    },
    "delay_var": {
      "type": "env",
      "key": "NET_DELAY_VAR",
      "default": "25ms"
    },
    "loss": {
      "type": "env",
      "key": "NET_LOSS",
      "default": "5%"
    },
    "loss_corr": {
      "type": "env",
      "key": "NET_LOSS_CORR",
      "default": "75%"
    }
  },
  "steady-state-hypothesis": {
    "title": "Test application responds",
    "probes": [
      {
        "type": "probe",
        "name": "test-app-responds",
        "tolerance": 200,
        "provider": {
          "type": "http",
          "url": "${site_to_test}",
          "verify_tls": false
        }
      }
    ]
  },
  "method": [
    {
      "type": "action",
      "name": "add-network-delays",
      "provider": {
        "type": "python",
        "module": "chaosturbulence.actions",
        "func": "attack",
        "arguments": {
          "task": { "Type": "ControlNet", "Timeout": "${network_timeout}", "Delay": "${delay}", "DelayVariation": "${delay_var}", "Loss": "${loss}", "LossCorrelation": "${loss_corr}" },
          "selector": {
            "Deployment": {"Name": "${deployment_name}"},
            "Group": {"Name": "${job_name}"},
            "ID": {"Limit": "${limit_nodes}"}
          }
        }
      },
      "pauses": {
        "after": 1
      }
    }
    ],
  "rollbacks": []
}
