{
  "version": "0.1.0",
  "title": "What is the impact of Filling UP the disk on one random PCF VM?",
  "description": "If a random PCF VM's disk has been filled UP, then what happens to the quality of service? // Set AZURE_AUTH_LOCATION to the location of your Azure Auth file",
  "contributions": {
    "reliability": "high",
    "availability": "high",
    "performance": "medium",
    "security": "none"
  },
  "tags": [
    "tls",
    "cloudfoundry"
  ],
  "configuration": {
    "azure_subscription_id": "your-azure-subscription-id-goes-here",
    "site_to_test": {
      "type": "env",
      "key": "SITE_TO_TEST",
      "default": "https://www.google.com/"
    },
    "resource_group": {
      "type": "env",
      "key": "RESOURCE_GROUP",
      "default": "some-resource-grp"
    },
    "deployment_name": {
      "type": "env",
      "key": "DEPLOYMENT_NAME",
      "default": "cf-123ABC"
    },
    "job_name": {
      "type": "env",
      "key": "JOB_NAME",
      "default": "router"
    },
    "limit_nodes": {
      "type": "env",
      "key": "LIMIT",
      "default": 1
    },
    "duration": {
      "type": "env",
      "key": "DURATION_SECONDS",
      "default": 240
    },
    "timeout": {
      "type": "env",
      "key": "TIMEOUT_SECONDS",
      "default": 60
    },
    "file_size": {
      "type": "env",
      "key": "FILL_FILE_SIZE_MB",
      "default": 1000
    },
    "file_path": {
      "type": "env",
      "key": "FILL_FILENAME",
      "default": "/var/vcap/data/burn-baby-burn"
    }
  },
  "steady-state-hypothesis": {
    "title": "Test application responds",
    "probes": [
      {
        "type": "probe",
        "name": "test-app-responds",
        "tolerance": 200,
        "provider": {
          "type": "http",
          "url": "${site_to_test}",
          "verify_tls": false
        }
      }
    ]
  },
  "method": [
    {
      "type": "action",
      "name": "fill-disk-on-random-vm",
      "provider": {
        "type": "python",
        "module": "chaosazure.machine.actions",
        "func": "fill_disk",
        "arguments": {
          "filter": "where resourceGroup=='${resource_group}' and tags.deployment=='${deployment_name}' and tags.job=='${job_name}' | limit ${limit_nodes}",
          "duration": 240,
          "timeout": 60,
          "size": 1000,
          "path": "${file_path}"
        }
      },
      "pauses": {
        "after": 1
      }
    }
    ],
  "rollbacks": []
}
